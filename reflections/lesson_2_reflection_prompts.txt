What happens when you initialize a repository? Why do you need to do it?
    when init a repo, a .git folder is created.
    the .git folder contains the info and structured file of git to manage the version control.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    staging area is like a middle layer between working directory and repository.
    it gives us a change to review what we really want to commit.

How can you use the staging area to make sure you have one commit per logical
change?
    git status to check the files we need to commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
    doing some new feature, or some experiment, or fix a bug, or variant handling.

How do the diagrams help you visualize the branch structure?
    merge means put two development path together.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
    If the two branches don't have any conflict, then they just merge.
    If the two branches have any conflict, then git will mark the difference in the conflict files.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
    automatically: easy, quick but the result may not be what you want.
    manually: decide by people, but slow and low effiency.
